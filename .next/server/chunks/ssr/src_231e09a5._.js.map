{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kodi/Desktop/Crypto-soc-site/src/config/nzGeoData.ts"],"sourcesContent":["export const newZealandGeoJson = {\n    type: 'Feature',\n    properties: {\n        name: 'New Zealand',\n        code: 'NZL',\n        group: 'Countries'\n    },\n    geometry: {\n        type: 'MultiPolygon',\n        coordinates: [\n            [\n                [\n                    [173.020375, -40.919052],\n                    [173.247234, -41.331999],\n                    [173.958405, -40.926701],\n                    [174.247587, -41.349155],\n                    [174.248517, -41.770008],\n                    [173.876447, -42.233184],\n                    [173.22274, -42.970038],\n                    [172.711246, -43.372288],\n                    [173.080113, -43.853344],\n                    [172.308584, -43.865694],\n                    [171.452925, -44.242519],\n                    [171.185138, -44.897104],\n                    [170.616697, -45.908929],\n                    [169.831422, -46.355775],\n                    [169.332331, -46.641235],\n                    [168.411354, -46.619945],\n                    [167.763745, -46.290197],\n                    [166.676886, -46.219917],\n                    [166.509144, -45.852705],\n                    [167.046424, -45.110941],\n                    [168.303763, -44.123973],\n                    [168.949409, -43.935819],\n                    [169.667815, -43.555326],\n                    [170.52492, -43.031688],\n                    [171.12509, -42.512754],\n                    [171.569714, -41.767424],\n                    [171.948709, -41.514417],\n                    [172.097227, -40.956104],\n                    [172.79858, -40.493962],\n                    [173.020375, -40.919052]\n                ]\n            ],\n            [\n                [\n                    [174.612009, -36.156397],\n                    [175.336616, -37.209098],\n                    [175.357596, -36.526194],\n                    [175.808887, -36.798942],\n                    [175.95849, -37.555382],\n                    [176.763195, -37.881253],\n                    [177.438813, -37.961248],\n                    [178.010354, -37.579825],\n                    [178.517094, -37.695373],\n                    [178.274731, -38.582813],\n                    [177.97046, -39.166343],\n                    [177.206993, -39.145776],\n                    [176.939981, -39.449736],\n                    [177.032946, -39.879943],\n                    [176.885824, -40.065978],\n                    [176.508017, -40.604808],\n                    [176.01244, -41.289624],\n                    [175.239567, -41.688308],\n                    [175.067898, -41.425895],\n                    [174.650973, -41.281821],\n                    [175.22763, -40.459236],\n                    [174.900157, -39.908933],\n                    [173.824047, -39.508854],\n                    [173.852262, -39.146602],\n                    [174.574802, -38.797683],\n                    [174.743474, -38.027808],\n                    [174.697017, -37.381129],\n                    [174.292028, -36.711092],\n                    [174.319004, -36.534824],\n                    [173.840997, -36.121981],\n                    [173.054171, -35.237125],\n                    [172.636005, -34.529107],\n                    [173.007042, -34.450662],\n                    [173.551298, -35.006183],\n                    [174.32939, -35.265496],\n                    [174.612009, -36.156397]\n                ]\n            ]\n        ]\n    },\n    _id: 'new zealand'\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/kodi/Desktop/Crypto-soc-site/src/app/%28home%29/Map/Map.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useRef, useState, useMemo, useCallback } from 'react'\nimport * as d3 from 'd3'\nimport './Map.css'\n\n// Import from local config file instead of fetching\nimport { cities } from '@/config/cityMapData'\nimport { newZealandGeoJson } from '@/config/nzGeoData'\n\ntype Coordinate = [number, number]\ntype MultiPolygon = Coordinate[][][]\n\nconst camoColors: string[] = [\n    'rgb(34, 89, 41)', // Dark green\n    'rgb(85, 107, 47)', // Dark olive green\n    'rgb(107, 142, 35)', // Olive drab\n    'rgb(76, 111, 75)', // Forest green\n    'rgb(56, 124, 68)', // Sage green\n    'rgb(69, 97, 75)' // Military green\n]\n\nconst InteractiveMap = () => {\n    const [mounted, setIsMounted] = useState(false)\n\n    useEffect(() => {\n        if (!mounted) setIsMounted(true)\n    }, [mounted])\n\n    // Check if the component is being rendered on the server\n    if (typeof window === 'undefined') {\n        return null\n    }\n\n    return <InteractiveMapClient />\n}\n\nconst InteractiveMapClient = () => {\n    const mapRef = useRef<HTMLDivElement>(null)\n    const svgRef = useRef<SVGSVGElement | null>(null)\n    const markersRef = useRef<HTMLDivElement[]>([])\n    const popupCardsRef = useRef<HTMLDivElement[]>([])\n    const activePopupRef = useRef<string | null>(null)\n    // @ts-expect-error @TODO FIX AT SOME STAGE\n    const laserIntervalRef = useRef<ReturnType<typeof setInterval>>()\n    const [dimensions, setDimensions] = useState({ width: 800, height: 1000 }) // Reduced from 900x1120\n    // Update the pixelSize calculation to use larger pixel values\n    const pixelSize = useMemo(() => {\n        // Make pixels significantly larger on all screen sizes\n        if (window.innerWidth <= 768) {\n            return 10 // Mobile (was 7)\n        } else if (window.innerWidth <= 1200) {\n            return 22 // Small desktop (was 5)\n        } else if (window.innerWidth <= 1600) {\n            return 28 // Medium desktop\n        } else {\n            return 22 // Large desktop\n        }\n    }, [])\n\n    // Memoize the projection to prevent recalculation\n    // Memoize the projection to prevent recalculation with slightly adjusted vertical position\n    const projection = useMemo(() => {\n        // Scale increases with screen size\n        let baseScale\n\n        if (window.innerWidth <= 768) {\n            baseScale = 1400 // Original scale for mobile\n        } else if (window.innerWidth <= 1200) {\n            baseScale = 3500 // Medium scale for smaller desktops\n        } else if (window.innerWidth <= 1600) {\n            baseScale = 4500 // Larger scale for medium desktops\n        } else {\n            baseScale = 5000 // Maximum scale for large desktops\n        }\n\n        // Adjust vertical position based on screen size - more subtle adjustment\n        let verticalPosition\n\n        if (window.innerWidth <= 768) {\n            verticalPosition = 0.45 // Keep mobile position at 45%\n        } else if (window.innerWidth <= 1200) {\n            verticalPosition = 0.48 // Slightly move down to 48% for smaller desktops\n        } else {\n            verticalPosition = 0.5 // Move down to 50% for larger desktops\n        }\n\n        return (\n            d3\n                .geoMercator()\n                .center([173, -41])\n                .scale(baseScale)\n                // More subtle vertical positioning adjustment\n                .translate([dimensions.width / 2, dimensions.height * verticalPosition])\n        )\n    }, [dimensions])\n\n    // Memoize the path generator\n    const path = useMemo(() => d3.geoPath().projection(projection), [projection])\n\n    // Debounced resize handler\n    const handleResize = useCallback(() => {\n        const debounce = <T extends (...args: unknown[]) => void>(fn: T, ms = 250) => {\n            let timeoutId: ReturnType<typeof setTimeout>\n            return function (this: unknown, ...args: Parameters<T>) {\n                clearTimeout(timeoutId)\n                timeoutId = setTimeout(() => fn.apply(this, args), ms)\n            }\n        }\n\n        const resizeMap = debounce(() => {\n            if (mapRef.current) {\n                const container = mapRef.current.getBoundingClientRect()\n                const aspectRatio = 1.25 // 1000/800\n                let newWidth, newHeight\n\n                if (window.innerWidth <= 768) {\n                    // Make the map fill more space on mobile\n                    newWidth = container.width\n                    newHeight = container.width * aspectRatio // Keep the aspect ratio\n                } else if (window.innerWidth <= 1200) {\n                    // Medium desktop screens\n                    newWidth = 1200 // Increased from 1000\n                    newHeight = 1500 // Increased from 1250\n                } else {\n                    // Large desktop screens\n                    newWidth = 1600 // Much larger for big desktop screens\n                    newHeight = 2000 // Maintain aspect ratio\n                }\n\n                setDimensions({ width: newWidth, height: newHeight })\n            }\n        }, 250)\n\n        window.addEventListener('resize', resizeMap)\n        resizeMap() // Call once to set initial dimensions\n\n        return () => window.removeEventListener('resize', resizeMap)\n    }, [])\n\n    // Laser beam logic\n    const distance = useCallback((p1: Coordinate, p2: Coordinate) => {\n        const dx = p1[0] - p2[0]\n        const dy = p1[1] - p2[1]\n        return Math.sqrt(dx * dx + dy * dy)\n    }, [])\n\n    const getHeatValue = useCallback(\n        (point: Coordinate) => {\n            let maxHeat = 0\n            cities.forEach((city) => {\n                const cityPoint = projection(city.coords) as Coordinate\n                const dist = distance([point[0], point[1]], cityPoint)\n                const heat = Math.max(0, 1 - dist / (30 * city.importance))\n                maxHeat = Math.max(maxHeat, heat)\n            })\n            return maxHeat\n        },\n        [projection, distance]\n    )\n\n    const getRandomCityPair = useCallback(() => {\n        const cityIndexes = Array.from({ length: cities.length }, (_, i) => i)\n        const fromIndex = Math.floor(Math.random() * cityIndexes.length)\n        cityIndexes.splice(fromIndex, 1)\n        const toIndex = Math.floor(Math.random() * cityIndexes.length)\n        return {\n            from: cities[fromIndex],\n            to: cities[cityIndexes[toIndex]]\n        }\n    }, [])\n\n    const createLaserElement = useCallback((x1: number, y1: number, x2: number, y2: number) => {\n        const laser = document.createElement('div')\n        laser.className = 'absolute w-0 h-[2px] laser-beam z-50'\n\n        const dx = x2 - x1\n        const dy = y2 - y1\n        const length = Math.sqrt(dx * dx + dy * dy)\n        const angle = Math.atan2(dy, dx) * (180 / Math.PI)\n\n        laser.style.width = `${length}px`\n        laser.style.left = `${x1}px`\n        laser.style.top = `${y1}px`\n        laser.style.transform = `rotate(${angle}deg)`\n        laser.style.transformOrigin = 'left center'\n\n        return laser\n    }, [])\n\n    const shootRandomLaser = useCallback(() => {\n        if (!mapRef.current || !svgRef.current) return\n\n        const { from, to } = getRandomCityPair()\n        const [fromX, fromY] = projection(from.coords) as Coordinate\n        const [toX, toY] = projection(to.coords) as Coordinate\n\n        const containerRect = mapRef.current.getBoundingClientRect()\n        const svgRect = svgRef.current.getBoundingClientRect()\n\n        const offsetX = svgRect.left - containerRect.left\n        const offsetY = svgRect.top - containerRect.top\n\n        const fromXPx = (fromX / dimensions.width) * svgRect.width + offsetX\n        const fromYPx = (fromY / dimensions.height) * svgRect.height + offsetY\n        const toXPx = (toX / dimensions.width) * svgRect.width + offsetX\n        const toYPx = (toY / dimensions.height) * svgRect.height + offsetY\n\n        const laser = createLaserElement(fromXPx, fromYPx, toXPx, toYPx)\n        mapRef.current.appendChild(laser)\n\n        requestAnimationFrame(() => {\n            laser.classList.add('active')\n        })\n\n        setTimeout(() => {\n            laser.remove()\n        }, 400)\n    }, [projection, getRandomCityPair, createLaserElement, dimensions])\n\n    // Remove existing popups from document body\n    const cleanupPopups = useCallback(() => {\n        popupCardsRef.current.forEach((card) => {\n            if (document.body.contains(card)) {\n                document.body.removeChild(card)\n            }\n        })\n        popupCardsRef.current = []\n        activePopupRef.current = null\n    }, [])\n\n    useEffect(() => {\n        const mapRefCurrent = mapRef.current\n\n        const handleScroll = () => {\n            if (activePopupRef.current) {\n                cleanupPopups()\n            }\n        }\n\n        // Add scroll event listener to both the window and map container\n        window.addEventListener('scroll', handleScroll, { passive: true })\n        mapRefCurrent?.addEventListener('scroll', handleScroll, { passive: true })\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll)\n            mapRefCurrent?.removeEventListener('scroll', handleScroll)\n        }\n    }, [cleanupPopups])\n\n    // Handle showing a popup card\n    const showPopupCard = useCallback(\n        (cityName: string, pinRect: DOMRect) => {\n            // Clean up any existing popup\n            cleanupPopups()\n\n            // Find the city data\n            const city = cities.find((c) => c.name === cityName)\n            if (!city || !mapRef.current) return\n\n            // Create card for city details\n            const card = document.createElement('div')\n            card.className = `\n            fixed bg-black/80 backdrop-blur-md rounded-xl p-3 md:p-5 \n            w-[220px] md:w-[300px] opacity-0 pointer-events-none \n            transition-all duration-300 z-30 border border-green-500/30 \n            shadow-lg shadow-green-900/30 transform scale-95 \n            popup-card\n        `\n\n            card.innerHTML = `\n            <div class=\"flex justify-between items-start\">\n                <h3 class=\"text-green-500 font-bold text-sm md:text-base mb-1 md:mb-2\">${city.name}</h3>\n                <button class=\"close-popup text-green-500 hover:text-white p-1 -mt-1 -mr-1 rounded-full\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                        <path d=\"M18 6L6 18M6 6l12 12\"></path>\n                    </svg>\n                </button>\n            </div>\n            <p class=\"text-gray-200 text-xs md:text-sm leading-relaxed mb-2\">${city.description}</p>\n            <div class=\"border-t border-green-500/30 pt-2 mt-2 space-y-1.5\">\n            <p class=\"text-green-400 text-xs md:text-sm\">\n                <span class=\"font-semibold\">Host:</span> <span class=\"text-white\">${city.host}</span>\n            </p>\n            <p class=\"text-green-400 text-xs md:text-sm\">\n                <span class=\"font-semibold\">Usual Attendees:</span> <span class=\"text-white\">${city.usualAttendees}</span>\n            </p>\n            <p class=\"text-green-400 text-xs md:text-sm\">\n                <span class=\"font-semibold\">Venue:</span> <span class=\"text-white\">${city.venue}</span>\n            </p>\n\n            <!-- Group Date and Time -->\n            <div class=\"flex justify-between text-green-400 text-xs md:text-sm\">\n                <p>\n                    <span class=\"font-semibold\">Next Meetup: </span> <span class=\"text-white\">${city.time} - </span>\n                    <span class=\"text-white\">${city.date}</span>\n                </p>   \n            </div>\n\n            <div class=\"flex justify-end\">\n                <a href=\"${city.link}\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\" \n                    class=\"inline-block mt-3 text-xs md:text-sm bg-green-500/20 hover:bg-green-500/30 text-green-400 px-3 py-1 rounded-md transition-colors\">\n                    View Meetup Details\n                </a>\n            </div>\n            </div>\n        `\n\n            const mapRect = mapRef.current?.getBoundingClientRect() || { top: 0, left: 0, bottom: window.innerHeight, right: window.innerWidth }\n\n            // Determine if card should appear above or below the pin\n            const spaceAbove = pinRect.top - mapRect.top\n            const spaceBelow = mapRect.bottom - pinRect.bottom\n            const cardHeight = 220 // Approximate height of card\n\n            // Position vertically based on available space\n            if (spaceBelow >= cardHeight || spaceAbove < cardHeight) {\n                // Position below pin if there's enough space below or not enough space above\n                card.style.top = `${pinRect.bottom + 8}px`\n                card.style.bottom = 'auto'\n                card.style.transformOrigin = 'top center'\n            } else {\n                // Position above pin\n                card.style.bottom = `${window.innerHeight - pinRect.top + 8}px`\n                card.style.top = 'auto'\n                card.style.transformOrigin = 'bottom center'\n            }\n\n            // Determine horizontal positioning\n            const isNearLeftEdge = pinRect.left - mapRect.left < 150\n            const isNearRightEdge = mapRect.right - pinRect.right < 150\n\n            if (isNearLeftEdge) {\n                card.style.left = `${pinRect.left}px`\n                card.style.right = 'auto'\n            } else if (isNearRightEdge) {\n                card.style.right = `${window.innerWidth - pinRect.right}px`\n                card.style.left = 'auto'\n            } else {\n                // Center the card horizontally under the pin\n                card.style.left = `${pinRect.left + pinRect.width / 2 - 110}px` // Half of 220px card width\n                card.style.right = 'auto'\n            }\n\n            // Add the card to document body and track it for cleanup\n            document.body.appendChild(card)\n            popupCardsRef.current.push(card)\n            activePopupRef.current = cityName\n\n            // Add click event to close button\n            const closeButton = card.querySelector('.close-popup')\n            if (closeButton) {\n                closeButton.addEventListener('click', (e) => {\n                    e.stopPropagation()\n                    cleanupPopups()\n                })\n            }\n\n            // Show the card\n            requestAnimationFrame(() => {\n                card.style.opacity = '1'\n                card.style.pointerEvents = 'auto'\n                card.style.transform = 'scale(1)'\n            })\n        },\n        [cleanupPopups]\n    )\n\n    // Handle popup closing - global click handler\n    useEffect(() => {\n        const handleDocumentClick = (e: MouseEvent) => {\n            // Only close popup if click is outside any marker and not on the popup itself\n            const target = e.target as HTMLElement\n\n            // Don't close if clicked on a marker or inside a popup\n            const isMarkerClick = markersRef.current.some((marker) => marker.contains(target))\n            const isPopupClick = popupCardsRef.current.some((popup) => popup.contains(target))\n\n            if (!isMarkerClick && !isPopupClick) {\n                cleanupPopups()\n            }\n        }\n\n        document.addEventListener('click', handleDocumentClick)\n        return () => {\n            document.removeEventListener('click', handleDocumentClick)\n        }\n    }, [cleanupPopups])\n\n    // Create city markers with support for both mouse and touch events\n    const createCityMarkers = useCallback(() => {\n        if (!mapRef.current) return\n\n        // Clean up existing markers and popups\n        markersRef.current.forEach((marker) => marker.remove())\n        markersRef.current = []\n        cleanupPopups()\n\n        cities.forEach((city) => {\n            // Apply a correction factor to city coordinates to fix vertical scaling issues\n            // This is a simple approach to counter the Mercator projection's vertical distortion\n            const adjustedCoords = [...city.coords]\n\n            // Adjust latitude (second coordinate) if needed based on how far from the equator\n            // The further from the equator, the more correction needed\n            const originalLat = adjustedCoords[1]\n\n            // No need to modify longitude (first coordinate)\n\n            // Project adjusted city coordinates\n            const projected = projection([adjustedCoords[0], originalLat]) as Coordinate\n\n            // If projection is outside the viewable area, skip this city\n            if (!projected || projected[0] < 0 || projected[0] > dimensions.width || projected[1] < 0 || projected[1] > dimensions.height) {\n                console.log(`City ${city.name} is outside the viewable area, skipping`)\n                return\n            }\n\n            const [x, y] = projected\n\n            // Add a manual vertical offset based on latitude to push pins toward center\n            let verticalOffset = 0\n\n            // Northern cities need to be pushed down more aggressively\n            if (city.coords[1] > -38) {\n                verticalOffset = 35 // Increased from 20 to 35\n            }\n            // Southern cities need to be pushed up more aggressively\n            else if (city.coords[1] < -44) {\n                verticalOffset = -35 // Increased from -20 to -35\n            }\n            // Middle-north cities also need adjustment\n            else if (city.coords[1] > -40) {\n                verticalOffset = 25 // New adjustment for the 5th pin and similar ones\n            }\n            // Middle-south cities need slight adjustment too\n            else if (city.coords[1] < -42) {\n                verticalOffset = -25 // Balanced adjustment for middle-south\n            }\n\n            // Calculate percentage positions with manual offset adjustment\n            const xPos = (x / dimensions.width) * 100\n            const yPos = ((y + verticalOffset) / dimensions.height) * 100\n\n            // Only create marker if it's in a reasonable position (within the map)\n            if (xPos >= 0 && xPos <= 100 && yPos >= 0 && yPos <= 100) {\n                const pinContainer = document.createElement('div')\n                pinContainer.className = `\n                    absolute -translate-x-1/2 -translate-y-full\n                    cursor-pointer group z-10\n                `\n                pinContainer.setAttribute('data-city', city.name)\n\n                pinContainer.style.left = `${xPos}%`\n                pinContainer.style.top = `${yPos}%`\n\n                // Create pin shape with larger size\n                const pin = document.createElement('div')\n                pin.className = `\n                    w-4 h-6 md:w-8 md:h-12 relative\n                    transition-transform duration-300 ease-bounce\n                    hover:scale-125 hover:-translate-y-1 origin-bottom\n                    active:scale-125 active:-translate-y-1\n                `\n                pin.innerHTML = `\n                    <svg viewBox=\"0 0 24 36\" class=\"w-full h-full\">\n                        <path d=\"M12 0C5.4 0 0 5.4 0 12c0 7.2 12 24 12 24s12-16.8 12-24c0-6.6-5.4-12-12-12z\" \n                              fill=\"#4ade80\" class=\"transition-colors duration-300 group-hover:fill-green-400 group-active:fill-green-400\"/>\n                        <circle cx=\"12\" cy=\"12\" r=\"6\" fill=\"#134e2c\" class=\"group-hover:animate-pulse group-active:animate-pulse\"/>\n                    </svg>\n                    <div class=\"absolute top-[18%] left-1/2 -translate-x-1/2 w-1.5 h-1.5 md:w-3 md:h-3 \n                               bg-green-600 rounded-full opacity-0 group-hover:opacity-100 group-active:opacity-100\n                               transition-opacity duration-300 animate-pulse\"></div>\n                `\n\n                // Handle click for mobile (and desktop) - show/hide popup\n                pinContainer.addEventListener('click', (e) => {\n                    e.stopPropagation()\n\n                    const clickedCity = pinContainer.getAttribute('data-city')\n\n                    // If this pin's popup is already active, close it\n                    if (activePopupRef.current === clickedCity) {\n                        cleanupPopups()\n                    } else {\n                        // Otherwise, show this pin's popup\n                        showPopupCard(city.name, pinContainer.getBoundingClientRect())\n                    }\n                })\n\n                // For desktop: Mouse hover events\n                if (window.matchMedia('(min-width: 768px)').matches) {\n                    pinContainer.addEventListener('mouseenter', () => {\n                        if (!activePopupRef.current) {\n                            showPopupCard(city.name, pinContainer.getBoundingClientRect())\n                        }\n                    })\n\n                    pinContainer.addEventListener('mouseleave', () => {\n                        // Only close on mouseleave if we're not in \"clicked\" mode\n                        const clicked = activePopupRef.current === city.name\n                        if (!clicked) {\n                            cleanupPopups()\n                        }\n                    })\n                }\n\n                pinContainer.appendChild(pin)\n                mapRef.current?.appendChild(pinContainer)\n                markersRef.current.push(pinContainer)\n            }\n        })\n    }, [projection, dimensions, cleanupPopups, showPopupCard])\n\n    // Render the map\n    const renderMap = useCallback(() => {\n        if (!mapRef.current) return\n\n        // Clean up\n        d3.select(mapRef.current).select('svg').remove()\n        const lasers = mapRef.current.querySelectorAll('.laser-beam')\n        lasers.forEach((laser) => laser.remove())\n        cleanupPopups()\n\n        // Create new SVG\n        const newSvg = d3.select(mapRef.current).append('svg').attr('viewBox', `0 0 ${dimensions.width} ${dimensions.height}`).attr('width', '100%').attr('height', '100%').attr('class', 'absolute w-full h-full left-0 top-0')\n\n        svgRef.current = newSvg.node() as SVGSVGElement\n\n        const multiPolygon = newZealandGeoJson.geometry.coordinates as MultiPolygon\n\n        // Use requestAnimationFrame for smoother rendering\n        requestAnimationFrame(() => {\n            // Render NZ outline\n            multiPolygon.forEach((polygonCoords) => {\n                const feature = {\n                    type: 'Feature',\n                    properties: newZealandGeoJson.properties,\n                    geometry: {\n                        type: 'Polygon',\n                        coordinates: polygonCoords\n                    }\n                }\n\n                newSvg\n                    .append('path')\n                    .datum(feature)\n                    .attr('d', path as d3.ValueFn<SVGPathElement, unknown, string>)\n                    .attr('class', 'fill-none stroke-neutral-700 stroke-[0.5]')\n            })\n\n            // Render pixels in chunks for better performance\n            const cols = Math.ceil(dimensions.width / pixelSize)\n            const rows = Math.ceil(dimensions.height / pixelSize)\n            const chunkSize = 1000 // Process this many pixels at once\n\n            const isInside = (point: Coordinate) => {\n                return multiPolygon.some((polygonCoords) => {\n                    const feature = {\n                        type: 'Feature',\n                        properties: {},\n                        geometry: {\n                            type: 'Polygon',\n                            coordinates: polygonCoords\n                        }\n                    }\n                    return d3.geoContains(feature as d3.GeoPermissibleObjects, point)\n                })\n            }\n\n            // Pre-compute which pixels are inside NZ\n            const pixelsToRender: { x: number; y: number; heat: number }[] = []\n\n            for (let i = 0; i < rows; i++) {\n                // Don't skip rows to eliminate gaps\n                for (let j = 0; j < cols; j++) {\n                    // Don't skip columns to eliminate gaps\n                    const x = j * pixelSize\n                    const y = i * pixelSize\n\n                    if (projection.invert) {\n                        const point = projection.invert([x + pixelSize / 2, y + pixelSize / 2]) as Coordinate\n\n                        if (isInside(point)) {\n                            const heat = getHeatValue([x, y])\n                            pixelsToRender.push({ x, y, heat })\n                        }\n                    }\n                }\n            }\n\n            // Render pixels in chunks\n            let currentIndex = 0\n\n            function renderChunk() {\n                const endIndex = Math.min(currentIndex + chunkSize, pixelsToRender.length)\n\n                for (let i = currentIndex; i < endIndex; i++) {\n                    const { x, y, heat } = pixelsToRender[i]\n                    const rect = newSvg.append('rect').attr('x', x).attr('y', y).attr('width', pixelSize).attr('height', pixelSize).attr('stroke', 'none') // Ensure no stroke to avoid gaps\n\n                    if (heat > 0.1) {\n                        rect.attr('class', 'pixel heat').style('animation-delay', `${Math.random() * 2}s`)\n                    } else {\n                        const randomCamoColor = camoColors[Math.floor(Math.random() * camoColors.length)]\n                        rect.attr('class', 'pixel')\n                            .style('fill', randomCamoColor)\n                            .style('opacity', 0.8 + Math.random() * 0.2)\n                    }\n                }\n\n                currentIndex = endIndex\n\n                if (currentIndex < pixelsToRender.length) {\n                    requestAnimationFrame(renderChunk)\n                } else {\n                    // All pixels rendered, create city markers\n                    createCityMarkers()\n\n                    // Start laser animations\n                    if (laserIntervalRef.current) {\n                        clearInterval(laserIntervalRef.current)\n                    }\n\n                    laserIntervalRef.current = setInterval(() => {\n                        shootRandomLaser()\n                    }, 300) // Reduced frequency for better performance\n                }\n            }\n\n            // Start rendering chunks\n            renderChunk()\n        })\n    }, [dimensions, path, projection, getHeatValue, createCityMarkers, shootRandomLaser, pixelSize, cleanupPopups])\n\n    // Initialize resize handler\n    useEffect(() => {\n        return handleResize()\n    }, [handleResize])\n\n    // Render map when dimensions change\n    useEffect(() => {\n        renderMap()\n\n        return () => {\n            cleanupPopups()\n            if (laserIntervalRef.current) {\n                clearInterval(laserIntervalRef.current)\n            }\n        }\n    }, [dimensions, renderMap, cleanupPopups])\n\n    // Adjusted container with balanced padding and more modest height\n    return (\n        <div className=\"w-full pl-2 pr-2 md:pl-4 md:pr-4 lg:pl-0 lg:pr-0\">\n            <div ref={mapRef} className=\"w-full h-[85vh] md:h-[90vh] lg:h-[95vh] xl:h-screen m-0 p-0 bg-transparent relative overflow-hidden\" />\n        </div>\n    )\n}\n\nexport default InteractiveMap\n"],"names":[],"mappings":"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","debugId":null}}]
}