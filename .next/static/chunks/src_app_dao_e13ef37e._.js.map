{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kodi/Desktop/Crypto-soc-site/src/app/dao/queries.ts"],"sourcesContent":["export const proposalQuery = `\n  query GetProposals($daoAddress: String!) {\n    proposals(where: { dao: $daoAddress }) {\n      id\n      yesVotes\n      noVotes\n      yesBalance\n      noBalance\n      createdAt\n      title\n      description\n      passed\n      votingEnds\n      processed\n      dao {\n        totalShares\n        quorumPercent\n      }\n      votes {\n        id\n        balance\n      }\n    }\n  }\n`;\n\nexport const daoQuery = `\n{\n  dao(id: \"0xc26c447eb0c9a783681245fca7f245cfb3f1dd6a\") {\n    id\n    createdAt\n    proposalCount\n    activeMemberCount\n    totalShares\n    proposalOffering\n    profile: records(\n      first: 1\n      orderBy: createdAt\n      orderDirection: desc\n      where: { table: \"daoProfile\" }\n    ) {\n      createdAt\n      createdBy\n      contentType\n      content\n    }\n  }\n}\n`;\n"],"names":[],"mappings":";;;;AAAO,MAAM,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAwB9B,CAAC;AAEM,MAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBzB,CAAC","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/kodi/Desktop/Crypto-soc-site/src/app/dao/fetchDAO.ts"],"sourcesContent":["// lib/fetchDAO.ts\nimport { proposalQuery, daoQuery } from \"./queries\";\n\nconst daoAddress = \"0xc26c447eb0c9a783681245fca7f245cfb3f1dd6a\";\n\ninterface DAOProfile {\n  content: string | null;\n}\n\ninterface DAO {\n  id: string;\n  totalShares: string;\n  quorumPercent: string;\n  proposalOffering: number;\n  activeMemberCount: number;\n  proposalCount: number;\n  profile?: DAOProfile[];\n  createdAt: string;\n}\n\ninterface Proposal {\n  id: string;\n  title?: string;\n  description?: string;\n  yesBalance: string;\n  noBalance: string;\n  createdAt: string;\n  votingEnds: string;\n  dao: DAO;\n}\n\ninterface ProposalsResponse {\n  data: {\n    proposals: Proposal[];\n  };\n  errors?: { message: string }[];\n}\n\ninterface DAOResponse {\n  data: {\n    dao: DAO;\n  };\n  errors?: { message: string }[];\n}\n\ninterface FormattedProposal {\n  title: string;\n  description: string;\n  id: string;\n  progress: number;\n  quorum: {\n    current: number;\n    required: number;\n    percent: string;\n  };\n  status: string;\n  createdAt: string;\n  raw: Proposal;\n}\n\ninterface DAOData {\n  dao: {\n    proposals: FormattedProposal[];\n    activeProposals: number;\n    activeMemberCount: number;\n    totalShares: number;\n    proposalCount: number;\n    tokenBalance: string;\n    content: string | null;\n    createdAt: string | null;\n  };\n}\n\nexport async function fetchDAOData(): Promise<DAOData> {\n  const endpoint =\n    \"https://gateway-arbitrum.network.thegraph.com/api/09ee157c2e5e6598d352197e957932f6/subgraphs/id/CgH5vtz9CJPdcSmD3XEh8fCVDjQjnRwrSawg71T1ySXW\";\n\n  try {\n    const [proposalsResponse, daoResponse] = await Promise.all([\n      fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: proposalQuery,\n          variables: { daoAddress },\n        }),\n      }),\n      fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ query: daoQuery }),\n      }),\n    ]);\n\n    const proposalsData: ProposalsResponse = await proposalsResponse.json();\n    const daoData: DAOResponse = await daoResponse.json();\n\n    if (proposalsData.errors || daoData.errors)\n      throw new Error(\"GraphQL query failed\");\n\n    const formattedProposals: FormattedProposal[] =\n      proposalsData.data.proposals.map((proposal) => {\n        const totalVoteBalance =\n          Number(proposal.yesBalance) + Number(proposal.noBalance);\n        const quorumRequired =\n          (Number(proposal.dao.totalShares) *\n            Number(proposal.dao.quorumPercent)) /\n          100;\n        const progressPercent = (totalVoteBalance / quorumRequired) * 100;\n        const date = new Date(Number(proposal.createdAt) * 1000);\n        const ending = new Date(Number(proposal.votingEnds) * 1000);\n        const currentDate = new Date();\n\n        let propStatus: string;\n        if (currentDate > ending) {\n          propStatus =\n            totalVoteBalance >= quorumRequired\n              ? Number(proposal.yesBalance) > Number(proposal.noBalance)\n                ? \"Passed\"\n                : \"Failed\"\n              : \"Failed\";\n        } else {\n          propStatus = \"Active\";\n        }\n\n        return {\n          title: proposal.title || `Proposal #${proposal.id}`,\n          description: proposal.description || \"No description provided\",\n          id: proposal.id,\n          progress: Math.min(progressPercent, 100),\n          quorum: {\n            current: totalVoteBalance,\n            required: quorumRequired,\n            percent: proposal.dao.quorumPercent,\n          },\n          status: propStatus,\n          createdAt: date.toLocaleDateString(\"en-GB\"),\n          raw: proposal,\n        };\n      });\n\n    const dao = daoData.data.dao;\n\n    return {\n      dao: {\n        proposals: formattedProposals.sort((a, b) => {\n          const dateA = new Date(Number(a.raw.createdAt) * 1000);\n          const dateB = new Date(Number(b.raw.createdAt) * 1000);\n          return dateB.getTime() - dateA.getTime();\n        }),\n        activeProposals: dao.proposalOffering,\n        activeMemberCount: dao.activeMemberCount || 0,\n        totalShares: Math.floor(Number(dao.totalShares || 0) / 1e18),\n        proposalCount: dao.proposalCount || formattedProposals.length,\n        tokenBalance: \"0\",\n        content: dao.profile?.[0]?.content || null,\n        createdAt: new Date(Number(dao.createdAt) * 1000).toLocaleDateString(\n          \"en-GB\",\n        ),\n      },\n    };\n  } catch (error) {\n    console.error(\"Error fetching DAO data:\", error);\n    return {\n      dao: {\n        proposals: [],\n        activeProposals: 0,\n        activeMemberCount: 0,\n        totalShares: 0,\n        proposalCount: 0,\n        tokenBalance: \"0\",\n        content: null,\n        createdAt: null,\n      },\n    };\n  }\n}\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAClB;;AAEA,MAAM,aAAa;AAsEZ,eAAe;IACpB,MAAM,WACJ;IAEF,IAAI;QACF,MAAM,CAAC,mBAAmB,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;YACzD,MAAM,UAAU;gBACd,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,OAAO,+HAAA,CAAA,gBAAa;oBACpB,WAAW;wBAAE;oBAAW;gBAC1B;YACF;YACA,MAAM,UAAU;gBACd,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,OAAO,+HAAA,CAAA,WAAQ;gBAAC;YACzC;SACD;QAED,MAAM,gBAAmC,MAAM,kBAAkB,IAAI;QACrE,MAAM,UAAuB,MAAM,YAAY,IAAI;QAEnD,IAAI,cAAc,MAAM,IAAI,QAAQ,MAAM,EACxC,MAAM,IAAI,MAAM;QAElB,MAAM,qBACJ,cAAc,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAChC,MAAM,mBACJ,OAAO,SAAS,UAAU,IAAI,OAAO,SAAS,SAAS;YACzD,MAAM,iBACJ,AAAC,OAAO,SAAS,GAAG,CAAC,WAAW,IAC9B,OAAO,SAAS,GAAG,CAAC,aAAa,IACnC;YACF,MAAM,kBAAkB,AAAC,mBAAmB,iBAAkB;YAC9D,MAAM,OAAO,IAAI,KAAK,OAAO,SAAS,SAAS,IAAI;YACnD,MAAM,SAAS,IAAI,KAAK,OAAO,SAAS,UAAU,IAAI;YACtD,MAAM,cAAc,IAAI;YAExB,IAAI;YACJ,IAAI,cAAc,QAAQ;gBACxB,aACE,oBAAoB,iBAChB,OAAO,SAAS,UAAU,IAAI,OAAO,SAAS,SAAS,IACrD,WACA,WACF;YACR,OAAO;gBACL,aAAa;YACf;YAEA,OAAO;gBACL,OAAO,SAAS,KAAK,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE;gBACnD,aAAa,SAAS,WAAW,IAAI;gBACrC,IAAI,SAAS,EAAE;gBACf,UAAU,KAAK,GAAG,CAAC,iBAAiB;gBACpC,QAAQ;oBACN,SAAS;oBACT,UAAU;oBACV,SAAS,SAAS,GAAG,CAAC,aAAa;gBACrC;gBACA,QAAQ;gBACR,WAAW,KAAK,kBAAkB,CAAC;gBACnC,KAAK;YACP;QACF;QAEF,MAAM,MAAM,QAAQ,IAAI,CAAC,GAAG;QAE5B,OAAO;YACL,KAAK;gBACH,WAAW,mBAAmB,IAAI,CAAC,CAAC,GAAG;oBACrC,MAAM,QAAQ,IAAI,KAAK,OAAO,EAAE,GAAG,CAAC,SAAS,IAAI;oBACjD,MAAM,QAAQ,IAAI,KAAK,OAAO,EAAE,GAAG,CAAC,SAAS,IAAI;oBACjD,OAAO,MAAM,OAAO,KAAK,MAAM,OAAO;gBACxC;gBACA,iBAAiB,IAAI,gBAAgB;gBACrC,mBAAmB,IAAI,iBAAiB,IAAI;gBAC5C,aAAa,KAAK,KAAK,CAAC,OAAO,IAAI,WAAW,IAAI,KAAK;gBACvD,eAAe,IAAI,aAAa,IAAI,mBAAmB,MAAM;gBAC7D,cAAc;gBACd,SAAS,IAAI,OAAO,EAAE,CAAC,EAAE,EAAE,WAAW;gBACtC,WAAW,IAAI,KAAK,OAAO,IAAI,SAAS,IAAI,MAAM,kBAAkB,CAClE;YAEJ;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;YACL,KAAK;gBACH,WAAW,EAAE;gBACb,iBAAiB;gBACjB,mBAAmB;gBACnB,aAAa;gBACb,eAAe;gBACf,cAAc;gBACd,SAAS;gBACT,WAAW;YACb;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/kodi/Desktop/Crypto-soc-site/src/app/dao/page.tsx"],"sourcesContent":["// 'use client';\n\n// import { useEffect, useState } from 'react';\n// import { fetchDAOData } from './fetchDAO';\n// import gsap from 'gsap';\n// import ScrollTrigger from 'gsap/ScrollTrigger';\n// import Link from 'next/link';\n// gsap.registerPlugin(ScrollTrigger);\n\n// export default function DAODashboard() {\n// // eslint-disable-next-line @typescript-eslint/no-unused-vars\n// const [DAOData, setDAOData] = useState<any>(null);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchDAOData().then(data => {\n//       setDAOData(data.dao);\n//       setLoading(false);\n\n//       setTimeout(() => {\n//         gsap.from(\".stats-container\", { y: 50, opacity: 0, duration: 1, stagger: 0.2 });\n//         gsap.to(\".scroll-dot\", { y: 8, repeat: -1, duration: 1.5, ease: \"power2.inOut\", yoyo: true });\n//         gsap.from(\".proposal-card\", {\n//           y: 100,\n//           opacity: 0,\n//           duration: 0.4,\n//           scrollTrigger: {\n//             trigger: \".proposals-container\",\n//             start: \"top center+=5\",\n//             end: \"top center-=100\",\n//             scrub: 0.5\n//           }\n//         });\n//         gsap.to(\".fade-on-scroll\", {\n//           scrollTrigger: {\n//             trigger: \"body\",\n//             start: \"top top\",\n//             end: \"+=200\",\n//             scrub: true\n//           },\n//           opacity: 0,\n//           y: 30\n//         });\n//       }, 0);\n//     });\n//   }, []);\n\n//   return (\n//     <div className=\"relative w-full flex flex-col items-center justify-start mt-10 md:mt-20 min-h-[80vh] lg:min-h-screen bg-gradient-to-br from-black-600 to-gray-800\">\n//       <Link href=\"/\">\n//         <a className=\"text-white text-sm underline mb-4\">← Back to Home</a>\n//         </Link>\n//         <Link href=\"/\">\n//       <a className=\"text-white text-sm underline mb-4\">← Back to Home</a>\n//       </Link>\n\n//       <div className=\"w-full text-center px-4 mb-10 md:px-[5%] pt-6 md:pt-8 mt-6 md:mt-10 font-bold text-2xl md:text-4xl text-white\">\n//         <h2>DAO Dashboard</h2>\n//         <p className=\"text-gray-400 text-base font-medium mt-2\">Real-time statistics and proposals</p>\n//       </div>\n//       <div className=\"inline-flex items-center px-4 sm:px-5 sm:py-2.5\n//                         bg-gradient-to-r from-orange-500/20 to-orange-600/10\n//                         hover:from-orange-500/30 hover:to-orange-600/20\n//                         border border-orange-500/40 hover:border-orange-400/60\n//                         rounded-lg text-orange-400 hover:text-orange-300\n//                         shadow-sm hover:shadow-[0_0_15px_rgba(255,165,0,0.4)]\n//                         transition-all duration-300 text-sm sm:text-base\">\n//         <a href=\"https://admin.daohaus.club/#/molochv3/0xa/0xc26c447eb0c9a783681245fca7f245cfb3f1dd6a\">\n//             <h2>Visit the DAO</h2>\n//         </a>\n//       </div>\n\n//       {loading ? (\n//         <div className=\"flex flex-col items-center justify-center mt-20 text-white\">\n//           <div className=\"loading-spinner mb-4\" />\n//           <p>Loading DAO data...</p>\n//         </div>\n//       ) : (\n//         <div className=\"w-full max-w-5xl px-4 md:px-8 py-10 md:py-20\">\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 stats-container\">\n//             <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n//               <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">Members</h3>\n//               <p className=\"text-2xl font-bold\">{DAOData.activeMemberCount}</p>\n//             </div>\n//             <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n//               <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">Total Shares</h3>\n//               <p className=\"text-2xl font-bold\">{DAOData.totalShares}</p>\n//             </div>\n//             <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n//               <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">Proposals</h3>\n//               <p className=\"text-2xl font-bold\">{DAOData.proposalCount}</p>\n//             </div>\n//             <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n//               <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">Active Proposals</h3>\n//               <p className=\"text-2xl font-bold\">{DAOData.activeProposals}</p>\n//             </div>\n//           </div>\n\n//           <div className=\"mt-20\">\n//             <h2 className=\"text-3xl font-bold text-white fade-on-scroll mb-4 mb-5 md:space-y-15 text-center\">Proposals</h2>\n\n//             <div className=\"proposals-container space-y-10\">\n//               {DAOData.proposals.length > 0 ? (\n//                 // eslint-disable-next-line @typescript-eslint/no-unused-vars\n//                 DAOData.proposals.map((proposal: any) => (\n//                   <div className=\"proposal-card rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-white shadow-xl\" key={proposal.id}>\n//                     <h2 className=\"text-xl font-bold text-orange-400 mb-2\">{proposal.title}</h2>\n//                     <p className=\"text-gray-300 mb-4\">{proposal.description}</p>\n//                     <div className=\"flex flex-col gap-2\">\n//                       <div className=\"text-sm text-gray-400\">ID: {proposal.id}</div>\n//                       <div className=\"relative w-full h-4 bg-gray-700 rounded-full overflow-hidden\">\n//                         <div className={`absolute top-0 left-0 h-full ${proposal.status === 'Failed' ? 'bg-red-500' : 'bg-green-500'}`} style={{ width: `${proposal.progress}%` }}></div>\n//                       </div>\n//                       <div className=\"text-sm text-gray-300\">\n//                         Quorum: {Math.round(proposal.progress)}% ({proposal.quorum.current} / {proposal.quorum.required} votes)\n//                       </div>\n//                       <div className=\"flex justify-between items-center mt-2 text-sm text-gray-400\">\n//                         <span>Status: <span className={proposal.status === 'Failed' ? 'text-red-400' : 'text-green-400'}>{proposal.status}</span></span>\n//                         <span>Created: {proposal.createdAt}</span>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <div className=\"text-center text-white text-lg\">No active proposals at the moment.</div>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { fetchDAOData } from \"./fetchDAO\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Link from \"next/link\";\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function DAODashboard() {\n  interface DAOData {\n    activeMemberCount: number;\n    totalShares: number;\n    proposalCount: number;\n    activeProposals: number;\n    proposals: Array<{\n      id: string;\n      title: string;\n      description: string;\n      status: string;\n      progress: number;\n      quorum: {\n        current: number;\n        required: number;\n      };\n      createdAt: string;\n    }>;\n  }\n\n  const [daoData, setDaoData] = useState<DAOData | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchDAOData().then((data) => {\n      setDaoData(data.dao as DAOData);\n      setLoading(false);\n\n      setTimeout(() => {\n        gsap.from(\".stats-container\", {\n          y: 50,\n          opacity: 0,\n          duration: 1,\n          stagger: 0.2,\n        });\n        gsap.to(\".scroll-dot\", {\n          y: 8,\n          repeat: -1,\n          duration: 1.5,\n          ease: \"power2.inOut\",\n          yoyo: true,\n        });\n        gsap.from(\".proposal-card\", {\n          y: 100,\n          opacity: 0,\n          duration: 0.4,\n          scrollTrigger: {\n            trigger: \".proposals-container\",\n            start: \"top center+=5\",\n            end: \"top center-=100\",\n            scrub: 0.5,\n          },\n        });\n        gsap.to(\".fade-on-scroll\", {\n          scrollTrigger: {\n            trigger: \"body\",\n            start: \"top top\",\n            end: \"+=200\",\n            scrub: true,\n          },\n          opacity: 0,\n          y: 30,\n        });\n      }, 0);\n    });\n  }, []);\n\n  return (\n    <div className=\"relative w-full flex flex-col items-center justify-start mt-10 md:mt-20 min-h-[80vh] lg:min-h-screen bg-gradient-to-br from-black-600 to-gray-800\">\n      <Link href=\"/\">\n        <p className=\"text-white text-sm underline mb-4\">← Back to Home</p>\n      </Link>\n\n      <div className=\"w-full text-center px-4 mb-10 md:px-[5%] pt-6 md:pt-8 mt-6 md:mt-10 font-bold text-2xl md:text-4xl text-white\">\n        <h2>DAO Dashboard</h2>\n        <p className=\"text-gray-400 text-base font-medium mt-2\">\n          Real-time statistics and proposals\n        </p>\n      </div>\n      <div\n        className=\"inline-flex items-center px-4 sm:px-5 sm:py-2.5 \n                        bg-gradient-to-r from-orange-500/20 to-orange-600/10\n                        hover:from-orange-500/30 hover:to-orange-600/20\n                        border border-orange-500/40 hover:border-orange-400/60\n                        rounded-lg text-orange-400 hover:text-orange-300 \n                        shadow-sm hover:shadow-[0_0_15px_rgba(255,165,0,0.4)]\n                        transition-all duration-300 text-sm sm:text-base\"\n      >\n        <a href=\"https://admin.daohaus.club/#/molochv3/0xa/0xc26c447eb0c9a783681245fca7f245cfb3f1dd6a\">\n          <h2>Visit the DAO</h2>\n        </a>\n      </div>\n\n      {loading ? (\n        <div className=\"flex flex-col items-center justify-center mt-20 text-white\">\n          <div className=\"loading-spinner mb-4\" />\n          <p>Loading DAO data...</p>\n        </div>\n      ) : (\n        <div className=\"w-full max-w-5xl px-4 md:px-8 py-10 md:py-20\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 stats-container\">\n            <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n              <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">\n                Members\n              </h3>\n              <p className=\"text-2xl font-bold\">\n                {daoData?.activeMemberCount || 0}\n              </p>\n            </div>\n            <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n              <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">\n                Total Shares\n              </h3>\n              <p className=\"text-2xl font-bold\">{daoData?.totalShares || 0}</p>\n            </div>\n            <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n              <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">\n                Proposals\n              </h3>\n              <p className=\"text-2xl font-bold\">\n                {daoData?.proposalCount || 0}\n              </p>\n            </div>\n            <div className=\"rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-center text-white\">\n              <h3 className=\"text-lg font-semibold text-orange-400 mb-2\">\n                Active Proposals\n              </h3>\n              <p className=\"text-2xl font-bold\">\n                {daoData?.activeProposals || 0}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-20\">\n            <h2 className=\"text-3xl font-bold text-white fade-on-scroll mb-4 md:space-y-15 text-center\">\n              Proposals\n            </h2>\n\n            <div className=\"proposals-container space-y-10\">\n              {daoData && daoData.proposals.length > 0 ? (\n                daoData.proposals.map((proposal) => (\n                  <div\n                    className=\"proposal-card rounded-xl border border-orange-500 bg-zinc-800/80 backdrop-blur-sm p-6 text-white shadow-xl\"\n                    key={proposal.id}\n                  >\n                    <h2 className=\"text-xl font-bold text-orange-400 mb-2\">\n                      {proposal.title}\n                    </h2>\n                    <p className=\"text-gray-300 mb-4\">{proposal.description}</p>\n                    <div className=\"flex flex-col gap-2\">\n                      <div className=\"text-sm text-gray-400\">\n                        ID: {proposal.id}\n                      </div>\n                      <div className=\"relative w-full h-4 bg-gray-700 rounded-full overflow-hidden\">\n                        <div\n                          className={`absolute top-0 left-0 h-full ${proposal.status === \"Failed\" ? \"bg-red-500\" : \"bg-green-500\"}`}\n                          style={{ width: `${proposal.progress}%` }}\n                        ></div>\n                      </div>\n                      <div className=\"text-sm text-gray-300\">\n                        Quorum: {}\n                        {(\n                          (proposal.quorum.current / proposal.quorum.required) *\n                          100\n                        ).toPrecision(3)}\n                        % ({/* Quorum: {}{Math.round(proposal.progress)}% ( */}\n                        {Number(proposal.quorum.current) / 1e18} /{\" \"}\n                        {Number(proposal.quorum.required) / 1e18} votes)\n                      </div>\n                      <div className=\"flex justify-between items-center mt-2 text-sm text-gray-400\">\n                        <span>\n                          Status:{\" \"}\n                          <span\n                            className={\n                              proposal.status === \"Failed\"\n                                ? \"text-red-400\"\n                                : \"text-green-400\"\n                            }\n                          >\n                            {proposal.status}\n                          </span>\n                        </span>\n                        <span>Created: {proposal.createdAt}</span>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"text-center text-white text-lg\">\n                  No active proposals at the moment.\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}